addpath('./dependencies');
addpath('./dependencies/im2mesh');
addpath('./dependencies/mfile');
addpath('./dependencies/aco-v1.1/aco');
addpath('./dependencies/map/map');
close all;

k=1;
static = Mesh.imread('img/hbs_seg/img5.png');
static = imresize(static, [256*k,256*k]);

[m,n] = size(static);
[face,vert] = Mesh.rect_mesh(m,n,0);
op = Mesh.mesh_operator(face,vert);
outer_boundary_idx = any([vert(:, 1)==0, vert(:, 1) == (n-1), vert(:,2) == 0, vert(:,2)== (m-1)], 2);
landmark = find(outer_boundary_idx);

moving = Mesh.imread('img/hbs_seg/tp2.png');
moving = imresize(moving, [256*k,256*k]);
% init_map = vert;
% load('mv.mat');
% moving = unit_disk;
static = double(static >= 0.5);
moving = double(moving >= 0.5);

P = struct(...
    'bound_point_num', 500,...
    'circle_point_num', 1000,...
    'hbs_mesh_density', 50,...
    'smooth_eps', 0,...
    'upper_bound' , 0.9999,...
    'init_image_display',           "img/hbs_seg/output/ins4/init.png",...
    'recounstruced_bound_display',  "img/hbs_seg/output/ins4/reconstructed.png",...
    'seg_display',                  "img/hbs_seg/output/ins4/seg_display.png",...
    'iteration',    100,...
    'u_times',      20,...
    'gaussian',     [0, 5],...
    'eta',          1,...
    'k1',           0.01,...
    'k2',           30,...
    'alpha',        1, ... % similarity with mu_f
    'beta',         0, ... % similarity with HBS
    'delta',        0.001, ... % grad of mu
    'lambda',       0.01, ... % abs of mu
    'T_params',     [] ...
);
% params = [1.491131e+00 6.309427e+00 2.828952e-03 1.312800e-02]; % img1 and tp1
% params = [8.181691e-01 3.153075e+00 -2.288972e-01 -5.887582e-02]; % img4 and tp2

HBS_seg(static,moving, P);